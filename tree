// Parser Tree
digraph {
	"0 code" [label=code]
	"0 code" -> "1 function" [constraint=true]
	"1 function" [label=function]
	"1 function" -> "2 id_funcao" [constraint=true]
	"2 id_funcao" [label=id_funcao]
	"2 id_funcao" -> "3 ('BARBARIDADE', 'TK_FUNC', 1, 1)" [constraint=true]
	"3 ('BARBARIDADE', 'TK_FUNC', 1, 1)" [label="('BARBARIDADE', 'TK_FUNC', 1, 1)"]
	"1 function" -> "3 tipo" [constraint=true]
	"3 tipo" [label=tipo]
	"3 tipo" -> "4 ('GURI', 'TK_INT', 1, 13)" [constraint=true]
	"4 ('GURI', 'TK_INT', 1, 13)" [label="('GURI', 'TK_INT', 1, 13)"]
	"1 function" -> "4 identificador" [constraint=true]
	"4 identificador" [label=identificador]
	"4 identificador" -> "5 ('namefunction', 'TK_IDENT', 1, 18)" [constraint=true]
	"5 ('namefunction', 'TK_IDENT', 1, 18)" [label="('namefunction', 'TK_IDENT', 1, 18)"]
	"1 function" -> "5 open_p" [constraint=true]
	"5 open_p" [label=open_p]
	"5 open_p" -> "6 ('(', 'TK_OP', 1, 30)" [constraint=true]
	"6 ('(', 'TK_OP', 1, 30)" [label="('(', 'TK_OP', 1, 30)"]
	"1 function" -> "6 close_p" [constraint=true]
	"6 close_p" [label=close_p]
	"6 close_p" -> "7 (')', 'TK_CP', 1, 31)" [constraint=true]
	"7 (')', 'TK_CP', 1, 31)" [label="(')', 'TK_CP', 1, 31)"]
	"1 function" -> "7 open_key" [constraint=true]
	"7 open_key" [label=open_key]
	"7 open_key" -> "8 ('{', 'TK_OK', 1, 32)" [constraint=true]
	"8 ('{', 'TK_OK', 1, 32)" [label="('{', 'TK_OK', 1, 32)"]
	"1 function" -> "8 retorno_f" [constraint=true]
	"8 retorno_f" [label=retorno_f]
	"8 retorno_f" -> "9 retorno" [constraint=true]
	"9 retorno" [label=retorno]
	"9 retorno" -> "10 ('LARGUEIMAO', 'TK_RETURN', 3, 5)" [constraint=true]
	"10 ('LARGUEIMAO', 'TK_RETURN', 3, 5)" [label="('LARGUEIMAO', 'TK_RETURN', 3, 5)"]
	"8 retorno_f" -> "10 tipos_retorno" [constraint=true]
	"10 tipos_retorno" [label=tipos_retorno]
	"10 tipos_retorno" -> "11 identificador" [constraint=true]
	"11 identificador" [label=identificador]
	"11 identificador" -> "12 ('a', 'TK_IDENT', 3, 16)" [constraint=true]
	"12 ('a', 'TK_IDENT', 3, 16)" [label="('a', 'TK_IDENT', 3, 16)"]
	"8 retorno_f" -> "11 ponto_virgula" [constraint=true]
	"11 ponto_virgula" [label=ponto_virgula]
	"11 ponto_virgula" -> "12 (';', 'TK_END', 3, 17)" [constraint=true]
	"12 (';', 'TK_END', 3, 17)" [label="(';', 'TK_END', 3, 17)"]
	"1 function" -> "9 close_key" [constraint=true]
	"9 close_key" [label=close_key]
	"9 close_key" -> "10 ('}', 'TK_CK', 4, 1)" [constraint=true]
	"10 ('}', 'TK_CK', 4, 1)" [label="('}', 'TK_CK', 4, 1)"]
}
