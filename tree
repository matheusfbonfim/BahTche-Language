// Parser Tree
digraph {
	"0 code" [label=code]
	"0 code" -> "1 main" [constraint=true]
	"1 main" [label=main]
	"1 main" -> "2 ('BAHTCHE', 'TK_MAIN', 1, 1)" [constraint=true]
	"2 ('BAHTCHE', 'TK_MAIN', 1, 1)" [label="('BAHTCHE', 'TK_MAIN', 1, 1)"]
	"0 code" -> "3 open_key" [constraint=true]
	"3 open_key" [label=open_key]
	"3 open_key" -> "4 ('{', 'TK_OK', 1, 8)" [constraint=true]
	"4 ('{', 'TK_OK', 1, 8)" [label="('{', 'TK_OK', 1, 8)"]
	"0 code" -> "5 content" [constraint=true]
	"5 content" [label=content]
	"5 content" -> "6 declara_print" [constraint=true]
	"6 declara_print" [label=declara_print]
	"6 declara_print" -> "7 print" [constraint=true]
	"7 print" [label=print]
	"7 print" -> "8 ('PRINTCHE', 'TK_PRINT', 2, 5)" [constraint=true]
	"8 ('PRINTCHE', 'TK_PRINT', 2, 5)" [label="('PRINTCHE', 'TK_PRINT', 2, 5)"]
	"6 declara_print" -> "9 open_p" [constraint=true]
	"9 open_p" [label=open_p]
	"9 open_p" -> "10 ('(', 'TK_OP', 2, 13)" [constraint=true]
	"10 ('(', 'TK_OP', 2, 13)" [label="('(', 'TK_OP', 2, 13)"]
	"6 declara_print" -> "11 identificador" [constraint=true]
	"11 identificador" [label=identificador]
	"11 identificador" -> "12 ('a', 'TK_IDENT', 2, 14)" [constraint=true]
	"12 ('a', 'TK_IDENT', 2, 14)" [label="('a', 'TK_IDENT', 2, 14)"]
	"6 declara_print" -> "13 close_p" [constraint=true]
	"13 close_p" [label=close_p]
	"13 close_p" -> "14 (')', 'TK_CP', 2, 15)" [constraint=true]
	"14 (')', 'TK_CP', 2, 15)" [label="(')', 'TK_CP', 2, 15)"]
	"6 declara_print" -> "15 ponto_virgula" [constraint=true]
	"15 ponto_virgula" [label=ponto_virgula]
	"15 ponto_virgula" -> "16 (';', 'TK_END', 2, 16)" [constraint=true]
	"16 (';', 'TK_END', 2, 16)" [label="(';', 'TK_END', 2, 16)"]
	"5 content" -> "17 content" [constraint=true]
	"17 content" [label=content]
	"17 content" -> "18 declara_print" [constraint=true]
	"18 declara_print" [label=declara_print]
	"18 declara_print" -> "19 print" [constraint=true]
	"19 print" [label=print]
	"19 print" -> "20 ('PRINTCHE', 'TK_PRINT', 3, 5)" [constraint=true]
	"20 ('PRINTCHE', 'TK_PRINT', 3, 5)" [label="('PRINTCHE', 'TK_PRINT', 3, 5)"]
	"18 declara_print" -> "21 open_p" [constraint=true]
	"21 open_p" [label=open_p]
	"21 open_p" -> "22 ('(', 'TK_OP', 3, 13)" [constraint=true]
	"22 ('(', 'TK_OP', 3, 13)" [label="('(', 'TK_OP', 3, 13)"]
	"18 declara_print" -> "23 texto" [constraint=true]
	"23 texto" [label=texto]
	"23 texto" -> "24 ('\"MATHEUS\"', 'TK_TEXT', 3, 14)" [constraint=true]
	"24 ('\"MATHEUS\"', 'TK_TEXT', 3, 14)" [label="('\"MATHEUS\"', 'TK_TEXT', 3, 14)"]
	"18 declara_print" -> "25 close_p" [constraint=true]
	"25 close_p" [label=close_p]
	"25 close_p" -> "26 (')', 'TK_CP', 3, 23)" [constraint=true]
	"26 (')', 'TK_CP', 3, 23)" [label="(')', 'TK_CP', 3, 23)"]
	"18 declara_print" -> "27 ponto_virgula" [constraint=true]
	"27 ponto_virgula" [label=ponto_virgula]
	"27 ponto_virgula" -> "28 (';', 'TK_END', 3, 24)" [constraint=true]
	"28 (';', 'TK_END', 3, 24)" [label="(';', 'TK_END', 3, 24)"]
	"17 content" -> "29 content" [constraint=true]
	"29 content" [label=content]
	"29 content" -> "30 declara_scanf" [constraint=true]
	"30 declara_scanf" [label=declara_scanf]
	"30 declara_scanf" -> "31 scanf" [constraint=true]
	"31 scanf" [label=scanf]
	"31 scanf" -> "32 ('INPUTCHE', 'TK_SCANF', 4, 5)" [constraint=true]
	"32 ('INPUTCHE', 'TK_SCANF', 4, 5)" [label="('INPUTCHE', 'TK_SCANF', 4, 5)"]
	"30 declara_scanf" -> "33 open_p" [constraint=true]
	"33 open_p" [label=open_p]
	"33 open_p" -> "34 ('(', 'TK_OP', 4, 13)" [constraint=true]
	"34 ('(', 'TK_OP', 4, 13)" [label="('(', 'TK_OP', 4, 13)"]
	"30 declara_scanf" -> "35 identificador" [constraint=true]
	"35 identificador" [label=identificador]
	"35 identificador" -> "36 ('a', 'TK_IDENT', 4, 14)" [constraint=true]
	"36 ('a', 'TK_IDENT', 4, 14)" [label="('a', 'TK_IDENT', 4, 14)"]
	"30 declara_scanf" -> "37 close_p" [constraint=true]
	"37 close_p" [label=close_p]
	"37 close_p" -> "38 (')', 'TK_CP', 4, 15)" [constraint=true]
	"38 (')', 'TK_CP', 4, 15)" [label="(')', 'TK_CP', 4, 15)"]
	"30 declara_scanf" -> "39 ponto_virgula" [constraint=true]
	"39 ponto_virgula" [label=ponto_virgula]
	"39 ponto_virgula" -> "40 (';', 'TK_END', 4, 16)" [constraint=true]
	"40 (';', 'TK_END', 4, 16)" [label="(';', 'TK_END', 4, 16)"]
	"0 code" -> "41 close_key" [constraint=true]
	"41 close_key" [label=close_key]
	"41 close_key" -> "42 ('}', 'TK_CK', 5, 1)" [constraint=true]
	"42 ('}', 'TK_CK', 5, 1)" [label="('}', 'TK_CK', 5, 1)"]
}
